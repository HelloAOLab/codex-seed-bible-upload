# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: |
          corepack enable
          pnpm install
      - run: pnpm compile
      - name: Package Pre-release
        if: github.ref_type != 'tag'
        run: |
          pnpm vsce package --no-dependencies --no-git-tag-version --pre-release
      - name: Package Production
        if: github.ref_type == 'tag'
        run: |
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//g')
          pnpm vsce package --no-dependencies --no-git-tag-version --no-update-package-json "$VERSION"
      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: 'codex-seed-bible-upload.vsix'
          path: '*.vsix'
      - name: Publish to OVSX
        if: github.ref_type == 'tag'
        run: |
          EXTENSION_NAME=$(find . -name *.vsix)
          cp "$EXTENSION_NAME" "codex-seed-bible-upload.vsix"
          pnpx ovsx publish "codex-seed-bible-upload.vsix" -p "${{ secrets.OvsxPublishKey }}"
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            *.vsix
            LICENSE
